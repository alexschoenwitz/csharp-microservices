# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# General settings for all files
[*]
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
indent_style = space
indent_size = 4

# C# specific settings
[*.cs]
# Formatting Rules
csharp_indent_braces = true
csharp_indent_case_contents = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_between_query_expression_clauses = true
csharp_prefer_braces = true:warning
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Code Style Rules (.NET)
# Reference: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_require_accessibility_modifiers = always:warning # Use 'always' for explicit modifiers, 'for_non_interface_members' is common too
dotnet_style_readonly_field = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_element_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_null_propagation = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_switch_expression = true:warning
dotnet_style_prefer_pattern_matching = true:warning
dotnet_style_prefer_pattern_matching_over_as_with_null_check = true:warning
dotnet_style_prefer_pattern_matching_over_is_with_cast_check = true:warning
dotnet_style_prefer_not_pattern = true:warning
dotnet_style_prefer_tuple_swap = true:warning # C# 7.3+

# 'var' preferences
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion

# using directives
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:warning # C# 8.0+

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Code Quality Rules (.NET) - Set severity to warning or error for strictness
# Reference: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
# Enable specific diagnostics and set their severity. Examples:
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary using directive
dotnet_diagnostic.IDE0017.severity = warning # Simplify object initialization
dotnet_diagnostic.IDE0028.severity = warning # Simplify collection initialization
dotnet_diagnostic.IDE0039.severity = warning # Use local function instead of lambda
dotnet_diagnostic.IDE0044.severity = warning # Make field readonly
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter
dotnet_diagnostic.IDE0063.severity = warning # Use simple 'using' statement (C# 8.0+)
dotnet_diagnostic.IDE0074.severity = warning # Use coalesce compound assignment
dotnet_diagnostic.IDE0090.severity = warning # Simplify 'new' expression (C# 9.0+)
dotnet_diagnostic.IDE1006.severity = warning # Naming rule violation

dotnet_diagnostic.CA1303.severity = none   # Do not pass literals as localized parameters (often too noisy for services)
dotnet_diagnostic.CA1707.severity = warning # Identifiers should not contain underscores (adjust if conflicting with style)
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning # Initialize reference type static fields inline
dotnet_diagnostic.CA1812.severity = warning # Avoid uninstantiated internal classes
dotnet_diagnostic.CA1822.severity = warning # Mark members as static
dotnet_diagnostic.CA2000.severity = warning # Dispose objects before losing scope
dotnet_diagnostic.CA2007.severity = warning # Consider calling ConfigureAwait(false) on awaited tasks
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
dotnet_diagnostic.CA2227.severity = warning # Collection properties should be read only

